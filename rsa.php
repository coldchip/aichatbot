<?php


class RSA {
	
	private $publicKey;
	private $privateKey;
	
	private $defaultExponent = 65537;
	
	function __construct()
	{
		if (!extension_loaded('gmp')) {
			die("[FATAL_ERROR] This Library Requires PHP GMP Library, Please Enable It If You Had Installed It. ");
		}
	}
	
	function encryptdecrypt($data, $p, $q)
	{
		return gmp_powm($data, $p, $q);
	}
	
	function generateKeys($insize)
	{	
		$size = ceil((($insize/2)/8)*2.421875);
		for($i = 0; $i < $size; $i++)
		{
			$randp .= mt_rand(1, 9);
			$randq .= mt_rand(1, 9);
		}

		$p = gmp_nextprime($randp);
		$q = gmp_nextprime($randq);
		
		$n = gmp_mul($p, $q);
		$phi_n = gmp_mul(gmp_sub($p, 1), gmp_sub($q, 1));
		
		$d = $this->genPrivateKey($this->defaultExponent, $phi_n);
		
		$publicKey =  $this->rsabase64encode($this->defaultExponent, $n, "public");
		$privateKey = $this->rsabase64encode($d, $n, "private");
		echo("RSA KEY BIT SIZE: " . $insize . "<br>");
		echo('<textarea style="width: 500px; height: 100px;">' . $publicKey . "</textarea><br>");
		echo('<textarea style="width: 500px; height: 100px;">' . $privateKey . "</textarea><br>");
	}
	
	function rsabase64encode($exponent, $modulus, $type)
	{
		$header = strtoupper("-----BEGIN COLDCHIP RSA " . $type . " KEY-----");
		$footer = strtoupper("-----END COLDCHIP RSA " . $type . " KEY-----");
		return $header . "\r\n" . base64_encode($exponent . "/" . $modulus) . "\r\n" . $footer;
	}
	
	function genPrivateKey($exponent, $p_n)
	{
		$x = 1;
		$y = 0;
		$e = $exponent;
		$phi_n = $p_n;
		do {
			$tmp = gmp_mod($e, $phi_n);
			$q = gmp_div($e, $phi_n);
			$e = $phi_n;
			$phi_n = $tmp;
			$tmp = gmp_sub($x, gmp_mul($y, $q));
			$x = $y;
			$y = $tmp;
		} while (gmp_cmp($phi_n, '0') !== 0);
		if (bccomp($x, '0') < 0) {
			$x = gmp_add($x, $p_n);
		}

		return $x;
	}
	
	
}

$rsa = new RSA();


echo($rsa->generateKeys(4096));

/*

$e = "65537";
$d = "14012455400780413658271904584349549524298947720255653949261251799476445469922441457444095301506175430382955417675186311896830334048045714263019326284481438228058938857310941662493330111942215461198742946194632125190770213805525591011082060369767456521713448939487646942590241504276465595655641932246278109787686352365029102182523304632452514480325223823810995802174503053257739714789980184058919160571448242066080318510648192647529902607334646157769924197492324588821425509573423694290085636491333038561719504635871501401513182184626768938754032954228039987554255561891664103767309812405173293627984356454421898228786912575702445157410742699968320179310176864324937103422212198845109616138600668472508096050422130326434372741482586330077921392991783667550331864179925432402031628088891009272395760450581499194261249167606255107285115871085023448142900351190281600671374746387024336364660554279353609043697614600818553108060139006732319833619648787066940936503914806454214403432556380932684087814004685119784771921236060360747088572231357608098726390790650809817124880155428449572072504299788898497790807939785322195997873097600981246077370038923949180269246948595673802555301011008907308211871362286088677536028613629761871508286556299515654783112254777474311363918218807885978613822560886505963592559035461044435321657716681039895152095530040392962120029291190470223552217803310439039282251222544673";
$n = "34601894860623435189230060691202578265786742153066872376516000722768945243493106473116566457227212478560955132184577442456012419084656065397720331074079126494057975730655131263557851377029275609667747417662306163851827712968075759536295591200205342805709657239909642715770032308431300894592456869390517275100060304255723898633610769242541086718051024632294696001775071838784946785538467645918213452387754462708542043490292034722726722953160915796600132710288412832614535177879181185105099561368971113346624384902830089952937807868646742876379919281131991584941343133372041837550798160346565265429435221136151015230595625074371181171108811014612803300356106298314370872154541103078822491065390806694917220828407085573375171111674910868147810063014827904854670327717422291799890268614423694021661596605533399405970954642336086307923657909504876431646495066371556022060190813647783569443802018908501085996224799487753908100264433650214571350294659072506747850471809655430369232177610087290991005356913817552561920621335652802178230321112173282148164136697767590005745519685434890453938144010059786206001014436570986565498503408593337270477123490937304581873808308283613720193159470589872303325893428252539115298296033918715070694222988181918614469165658233535967486039666082869607987885956434317087608535681183488148630765322434755707331710947462520068855017941979467144342522506229151138475604874379943";

$msg = "178786654345567567675666563454565767868543423567687687980980876543";

echo("Message: " . $msg . "<br>");

$enc = $rsa->encrypt($msg, $e, $n);


echo "encrypted_message: " . $enc . "<br>";

echo("decrypted_message: " . $rsa->encrypt($enc, $d, $n));

*/

?>
